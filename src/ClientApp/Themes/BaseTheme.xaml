<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <!-- BaseTheme.xaml: shared, theme-neutral resources (no concrete color values that define identity) -->
  
  <!-- Added reusable converters -->
  <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

  <!-- Typography -->
  <FontFamily x:Key="Font.Default">Segoe UI</FontFamily>
  <FontFamily x:Key="Font.Mono">Consolas</FontFamily>
  <sys:Double x:Key="FontSize.Caption" xmlns:sys="clr-namespace:System;assembly=mscorlib">11</sys:Double>
  <sys:Double x:Key="FontSize.Body" xmlns:sys="clr-namespace:System;assembly=mscorlib">13</sys:Double>
  <!-- New subtitle size between Body and Title -->
  <sys:Double x:Key="FontSize.Subtitle" xmlns:sys="clr-namespace:System;assembly=mscorlib">16</sys:Double>
  <sys:Double x:Key="FontSize.Title" xmlns:sys="clr-namespace:System;assembly=mscorlib">20</sys:Double>
  <sys:Double x:Key="FontSize.Headline" xmlns:sys="clr-namespace:System;assembly=mscorlib">26</sys:Double>

  <!-- Spacing Tokens -->
  <sys:Double x:Key="Space.0" xmlns:sys="clr-namespace:System;assembly=mscorlib">0</sys:Double>
  <sys:Double x:Key="Space.2" xmlns:sys="clr-namespace:System;assembly=mscorlib">2</sys:Double>
  <sys:Double x:Key="Space.4" xmlns:sys="clr-namespace:System;assembly=mscorlib">4</sys:Double>
  <sys:Double x:Key="Space.6" xmlns:sys="clr-namespace:System;assembly=mscorlib">6</sys:Double>
  <sys:Double x:Key="Space.8" xmlns:sys="clr-namespace:System;assembly=mscorlib">8</sys:Double>
  <sys:Double x:Key="Space.12" xmlns:sys="clr-namespace:System;assembly=mscorlib">12</sys:Double>
  <sys:Double x:Key="Space.16" xmlns:sys="clr-namespace:System;assembly=mscorlib">16</sys:Double>
  <sys:Double x:Key="Space.20" xmlns:sys="clr-namespace:System;assembly=mscorlib">20</sys:Double>
  <Thickness x:Key="Padding.Control">8,4</Thickness>
  <Thickness x:Key="Padding.Window">16</Thickness>

  <!-- Text Styles (brushes supplied by theme variants) -->
  <Style x:Key="Control.Text.Base" TargetType="TextBlock">
    <Setter Property="FontFamily" Value="{StaticResource Font.Default}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize.Body}" />
    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
    <Setter Property="TextWrapping" Value="Wrap" />
  </Style>
  <Style x:Key="Control.Text.Label" TargetType="TextBlock" BasedOn="{StaticResource Control.Text.Base}">
    <Setter Property="FontWeight" Value="SemiBold" />
  </Style>
  <Style x:Key="Control.Text.Caption" TargetType="TextBlock" BasedOn="{StaticResource Control.Text.Base}">
    <Setter Property="FontSize" Value="{StaticResource FontSize.Caption}" />
    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Secondary}" />
  </Style>
  <!-- New subtitle style -->
  <Style x:Key="Control.Text.Subtitle" TargetType="TextBlock" BasedOn="{StaticResource Control.Text.Base}">
    <Setter Property="FontSize" Value="{StaticResource FontSize.Subtitle}" />
    <Setter Property="FontWeight" Value="SemiBold" />
  </Style>
  <Style x:Key="Control.Text.Title" TargetType="TextBlock" BasedOn="{StaticResource Control.Text.Base}">
    <Setter Property="FontSize" Value="{StaticResource FontSize.Title}" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>
  <Style x:Key="Control.Text.Headline" TargetType="TextBlock" BasedOn="{StaticResource Control.Text.Base}">
    <Setter Property="FontSize" Value="{StaticResource FontSize.Headline}" />
    <Setter Property="FontWeight" Value="Bold" />
  </Style>

  <!-- Button Base Template (colors via DynamicResource) -->
  <Style x:Key="Control.Button.Base" TargetType="Button">
    <Setter Property="FontFamily" Value="{StaticResource Font.Default}" />
    <Setter Property="FontSize" Value="{StaticResource FontSize.Body}" />
    <Setter Property="Padding" Value="{StaticResource Padding.Control}" />
    <Setter Property="Margin" Value="0,0,8,0" />
    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
    <Setter Property="Background" Value="{DynamicResource Brush.Surface.Alt}" />
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Cursor" Value="Hand" />
    <Setter Property="SnapsToDevicePixels" Value="True" />
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="Button">
          <Border Background="{TemplateBinding Background}"
                  BorderBrush="{TemplateBinding BorderBrush}"
                  BorderThickness="{TemplateBinding BorderThickness}"
                  CornerRadius="4"
                  Padding="{TemplateBinding Padding}">
            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
          </Border>
          <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
              <Setter Property="Background" Value="{DynamicResource Brush.Primary.Hover}" />
              <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Setter Property="Background" Value="{DynamicResource Brush.Primary.Active}" />
              <Setter Property="Foreground" Value="White" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Setter Property="Opacity" Value="0.5" />
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  <Style x:Key="Control.Button.Primary" TargetType="Button" BasedOn="{StaticResource Control.Button.Base}">
    <Setter Property="Background" Value="{DynamicResource Brush.Primary}" />
    <Setter Property="Foreground" Value="White" />
  </Style>
  <Style x:Key="Control.Button.Danger" TargetType="Button" BasedOn="{StaticResource Control.Button.Base}">
    <Setter Property="Background" Value="{DynamicResource Brush.Danger}" />
    <Setter Property="Foreground" Value="White" />
  </Style>

  <!-- TextBox Base -->
  <Style x:Key="Control.TextBox.Base" TargetType="TextBox">
    <Setter Property="Margin" Value="0" />
    <Setter Property="Padding" Value="4,2" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="BorderBrush" Value="{DynamicResource Brush.Border}" />
    <Setter Property="BorderThickness" Value="1" />
    <Setter Property="Background" Value="{DynamicResource Brush.Surface}" />
    <Setter Property="Foreground" Value="{DynamicResource Brush.Text.Primary}" />
  </Style>

  <!-- TreeViewItem -->
  <Style x:Key="Control.TreeViewItem" TargetType="TreeViewItem">
    <Setter Property="HorizontalContentAlignment" Value="Stretch" />
    <Setter Property="VerticalContentAlignment" Value="Center" />
    <Setter Property="Padding" Value="2" />
  </Style>

  <!-- DataGrid Base -->
  <Style x:Key="Control.DataGrid.Base" TargetType="DataGrid">
    <Setter Property="RowHeight" Value="28" />
    <Setter Property="HeadersVisibility" Value="Column" />
    <Setter Property="GridLinesVisibility" Value="Horizontal" />
    <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource Brush.Border}" />
    <Setter Property="VerticalGridLinesBrush" Value="{DynamicResource Brush.Border}" />
    <Setter Property="AlternatingRowBackground" Value="{DynamicResource Brush.Surface.Alt}" />
  </Style>

  <!-- Shell / Window -->
  <Style x:Key="Shell.Window" TargetType="Window">
    <Setter Property="Background" Value="{DynamicResource Brush.Surface}" />
    <Setter Property="FontFamily" Value="{StaticResource Font.Default}" />
  </Style>
  <Style TargetType="StatusBar">
    <Setter Property="Background" Value="{DynamicResource Brush.Surface.Alt}" />
  </Style>
  <Style TargetType="TabControl">
    <Setter Property="Margin" Value="8" />
  </Style>
  <Style TargetType="TabItem">
    <Setter Property="Padding" Value="12,6" />
  </Style>

  <!-- Compatibility aliases -->
  <Style x:Key="Action" TargetType="Button" BasedOn="{StaticResource Control.Button.Base}" />
  <Style x:Key="PrimaryAction" TargetType="Button" BasedOn="{StaticResource Control.Button.Primary}" />
  <Style x:Key="MyLabel" TargetType="TextBlock" BasedOn="{StaticResource Control.Text.Label}" />
</ResourceDictionary>
